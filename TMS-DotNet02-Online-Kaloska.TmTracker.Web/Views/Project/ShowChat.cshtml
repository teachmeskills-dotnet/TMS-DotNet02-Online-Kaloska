<script src="~/js/signalr/dist/browser/signalr.min.js"></script>
<script src="/lib/jquery/dist/jquery.min.js"></script>
@section css
{
    <link rel="stylesheet" href="~/css/tracker.css" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,400;0,700;1,400;1,700&display = swap" rel="stylesheet">
    <link rel="stylesheet" type="text/css" asp-append-version="true" href="~/todolist/todo.css" />
    <link rel="stylesheet" type="text/css" asp-append-version="true" href="~/css/sidebarson.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha512-Fo3rlrZj/k7ujTnHg4CGR2D7kSs0v4LLanw2qksYuRlEzO+tcaEPQogQ0KaoGN26/zrn20ImR1DfuLWnOo7aBA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        #chat {
            color: #fff;
            background-color: #1b6ec2;
            border-color: #1861ac;
        }
    </style>
}


<div class="style-input-users" style=" display: flex; flex-direction: column; flex-wrap: wrap; text-align: center; ">
    <div id="loginBlock">
        Логин:
        <label id="userName">@Model.FullName.ToString()</label>
    </div>
    <div id="inputForm" style="margin-bottom:10px">
        <input type="text" id="message" />
        <input type="button" id="sendBtn" value="Отправить" />
    </div>
    <div id="chatroom" style=" text-align: center; max-width: 225px; margin: auto;"></div>
</div>

<script>
    let userName = document.getElementById("userName").innerText;
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/SignalRApp")
        .build();

    hubConnection.start();
    hubConnection.on('Send', function (messageModel) {

        let userNameElem = document.createElement("b");
        userNameElem.appendChild(document.createTextNode(messageModel.userID + ': '));
        let createTimeElem = document.createElement("SPAN");
        let create = new Date(messageModel.createDate).toLocaleString();
        userNameElem.appendChild(document.createTextNode(create+  '   '));
        let elem = document.createElement("p");
        elem.appendChild(createTimeElem);
        elem.appendChild(userNameElem);
        elem.appendChild(document.createTextNode(messageModel.message));

        var firstElem = document.getElementById("chatroom").firstChild;
        document.getElementById("chatroom").insertBefore(elem, firstElem);

    });
    hubConnection.on('Notify', function () {
            hubConnection.invoke("OnConnect", parseInt(@ViewBag.projectId) );
    });

    hubConnection.on('GetMessage', function (message) {

        for (let i = 0; i < message.length; i++) {

            let userNameElem = document.createElement("b");
            userNameElem.appendChild(document.createTextNode(message[i].userID + ': '));
            let createTimeElem = document.createElement("SPAN");
            let create = new Date(message[i].createDate).toLocaleString();
            userNameElem.appendChild(document.createTextNode(create+ '   '));
            let elem = document.createElement("p");
            elem.appendChild(createTimeElem);
            elem.appendChild(userNameElem);
            elem.appendChild(document.createTextNode(message[i].message));
            var firstElem = document.getElementById("chatroom").firstChild;
            document.getElementById("chatroom").insertBefore(elem, firstElem);
        }
    });
    document.getElementById("sendBtn").addEventListener("click", function (e) {
        let message = document.getElementById("message").value;
        hubConnection.invoke("Send", message, parseInt(@ViewBag.projectId), userName);
    });
</script>
